plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.datasoft.abs"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias 'mobioapp'
            keyPassword 'm0b10app'
            // update this path to your keystore file path
            storeFile file('/home/raman/Downloads/Credential/Keystore/MobioApp/bijoyparbone')
            storePassword 'm0b10app'
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix "-debug"

            buildConfigField "String", "BASE_URL", "\"" + getBaseUrl("DEBUG") + "\""
        }
        dev {
            initWith debug
            applicationIdSuffix = ".dev"
            versionNameSuffix "-dev"
            debuggable true

            buildConfigField "String", "BASE_URL", "\"" + getBaseUrl("DEV") + "\""
        }
        staging {
            initWith debug
            applicationIdSuffix = ".staging"
            versionNameSuffix "-staging"

            buildConfigField "String", "BASE_URL", "\"" + getBaseUrl("STAGING") + "\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            buildConfigField "String", "BASE_URL", "\"" + getBaseUrl("RELEASE") + "\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
//    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0'
//    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    //REST
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //Kotlin
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0-native-mt'

    //ViewModel helper
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    def room_version = "2.3.0"
    //room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // Preference DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha04"

    // Imager picker
    implementation 'com.github.dhaval2404:imagepicker:2.1'

    // EventEmitter (one-off events)
    implementation 'com.github.Zhuinden:event-emitter:1.1.0'

    // Shimmer effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0@aar'

    //More Info: https://github.com/Yalantis/uCrop
    implementation 'com.github.yalantis:ucrop:2.2.6'

    //LeakCanary
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // Signature capturing
    implementation 'com.github.gcacace:signature-pad:1.3.1'

    // base64image
    implementation 'com.pixelcarrot.base64image:base64image:1.0.0'

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // A tool for debugging
    implementation 'com.gu.android:toolargetool:0.3.0'
}

def getBaseUrl(build) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String baseUrl
    if (build.equalsIgnoreCase("DEBUG")) {
        baseUrl = properties.getProperty("debug_url")
    } else if (build.equalsIgnoreCase("DEV")) {
        baseUrl = properties.getProperty("dev_url")
    } else if (build.equalsIgnoreCase("STAGING")) {
        baseUrl = properties.getProperty("staging_url")
    } else if (build.equalsIgnoreCase("RELEASE")) {
        baseUrl = properties.getProperty("release_url")
    }
    if (baseUrl == null)
        throw new GradleException("Add 'base_url' field at local.properties file")

    return baseUrl
}